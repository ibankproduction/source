
/**
* Template Name: Bootslander - v4.7.2
* Template URL: https://bootstrapmade.com/bootslander-free-bootstrap-landing-page-template/
* Author: BootstrapMade.com
* License: https://bootstrapmade.com/license/
*/
(function() {
  "use strict";

  /**
   * Easy selector helper function
   */
  const select = (el, all = false) => {
    el = el.trim()
    if (all) {
      return [...document.querySelectorAll(el)]
    } else {
      return document.querySelector(el)
    }
  }

  /**
   * Easy event listener function
   */
  const on = (type, el, listener, all = false) => {
    let selectEl = select(el, all)
    if (selectEl) {
      if (all) {
        selectEl.forEach(e => e.addEventListener(type, listener))
      } else {
        selectEl.addEventListener(type, listener)
      }
    }
  }

  /**
   * Easy on scroll event listener 
   */
  const onscroll = (el, listener) => {
    el.addEventListener('scroll', listener)
  }

  /**
   * Navbar links active state on scroll
   */
  let navbarlinks = select('#navbar .scrollto', true)
  const navbarlinksActive = () => {
    let position = window.scrollY + 200
    navbarlinks.forEach(navbarlink => {
      if (!navbarlink.hash) return
      let section = select(navbarlink.hash)
      if (!section) return
      if (position >= section.offsetTop && position <= (section.offsetTop + section.offsetHeight)) {
        navbarlink.classList.add('active')
      } else {
        navbarlink.classList.remove('active')
      }
    })
  }
  window.addEventListener('load', navbarlinksActive)
  onscroll(document, navbarlinksActive)

  /**
   * Scrolls to an element with header offset
   */
  const scrollto = (el) => {
    let header = select('#header')
    let offset = header.offsetHeight

    if (!header.classList.contains('header-scrolled')) {
      offset -= 20
    }

    let elementPos = select(el).offsetTop
    window.scrollTo({
      top: elementPos - offset,
      behavior: 'smooth'
    })
  }

  /**
   * Toggle .header-scrolled class to #header when page is scrolled
   */
  let selectHeader = select('#header')
  if (selectHeader) {
    const headerScrolled = () => {
      if (window.scrollY > 100) {
        selectHeader.classList.add('header-scrolled')
      } else {
        selectHeader.classList.remove('header-scrolled')
      }
    }
    window.addEventListener('load', headerScrolled)
    onscroll(document, headerScrolled)
  }

  /**
   * Back to top button
   */
  let backtotop = select('.back-to-top')
  if (backtotop) {
    const toggleBacktotop = () => {
      if (window.scrollY > 100) {
        backtotop.classList.add('active')
      } else {
        backtotop.classList.remove('active')
      }
    }
    window.addEventListener('load', toggleBacktotop)
    onscroll(document, toggleBacktotop)
  }

  /**
   * Mobile nav toggle
   */
  on('click', '.mobile-nav-toggle', function(e) {
    select('#navbar').classList.toggle('navbar-mobile')
    this.classList.toggle('bi-list')
    this.classList.toggle('bi-x')
  })

  /**
   * Mobile nav dropdowns activate
   */
  on('click', '.navbar .dropdown > a', function(e) {
    if (select('#navbar').classList.contains('navbar-mobile')) {
      e.preventDefault()
      this.nextElementSibling.classList.toggle('dropdown-active')
    }
  }, true)

  /**
   * Scrool with ofset on links with a class name .scrollto
   */
  on('click', '.scrollto', function(e) {
    if (select(this.hash)) {
      e.preventDefault()

      let navbar = select('#navbar')
      if (navbar.classList.contains('navbar-mobile')) {
        navbar.classList.remove('navbar-mobile')
        let navbarToggle = select('.mobile-nav-toggle')
        navbarToggle.classList.toggle('bi-list')
        navbarToggle.classList.toggle('bi-x')
      }
      scrollto(this.hash)
    }
  }, true)

  /**
   * Scroll with ofset on page load with hash links in the url
   */
  window.addEventListener('load', () => {
    if (window.location.hash) {
      if (select(window.location.hash)) {
        scrollto(window.location.hash)
      }
    }
  });

  /**
   * Preloader
   */
  let preloader = select('#preloader');
  if (preloader) {
    window.addEventListener('load', () => {
      preloader.remove()
    });
  }

  /**
   * Initiate gallery lightbox 
   */
  const galleryLightbox = GLightbox({
    selector: '.gallery-lightbox'
  });

  /**
   * Testimonials slider
   */
  new Swiper('.testimonials-slider', {
    speed: 600,
    loop: true,
    autoplay: {
      delay: 5000,
      disableOnInteraction: false
    },
    slidesPerView: 'auto',
    pagination: {
      el: '.swiper-pagination',
      type: 'bullets',
      clickable: true
    }
  });

  /**
   * Animation on scroll
   */
  window.addEventListener('load', () => {
    AOS.init({
      duration: 1000,
      easing: 'ease-in-out',
      once: true,
      mirror: false
    })
  });
  
$('.carousel').carousel()
  
})()
/*!
    * Start Bootstrap - Agency v6.0.2 (https://startbootstrap.com/template-overviews/agency)
    * Copyright 2013-2020 Start Bootstrap
    * Licensed under MIT (https://github.com/StartBootstrap/startbootstrap-agency/blob/master/LICENSE)
    */
    (function ($) {
    "use strict"; // Start of use strict

    // Smooth scrolling using jQuery easing
    $('a.js-scroll-trigger[href*="#"]:not([href="#"])').click(function () {
        if (
            location.pathname.replace(/^\//, "") ==
                this.pathname.replace(/^\//, "") &&
            location.hostname == this.hostname
        ) {
            var target = $(this.hash);
            target = target.length
                ? target
                : $("[name=" + this.hash.slice(1) + "]");
            if (target.length) {
                $("html, body").animate(
                    {
                        scrollTop: target.offset().top - 72,
                    },
                    1000,
                    "easeInOutExpo"
                );
                return false;
            }
        }
    });

    // Closes responsive menu when a scroll trigger link is clicked
    $(".js-scroll-trigger").click(function () {
        $(".navbar-collapse").collapse("hide");
    });

    // Activate scrollspy to add active class to navbar items on scroll
    $("body").scrollspy({
        target: "#mainNav",
        offset: 74,
    });

    // Collapse Navbar
    var navbarCollapse = function () {
        if ($("#mainNav").offset().top > 100) {
            $("#mainNav").addClass("navbar-shrink");
        } else {
            $("#mainNav").removeClass("navbar-shrink");
        }
    };
    // Collapse now if page is not at top
    navbarCollapse();
    // Collapse the navbar when page is scrolled
    $(window).scroll(navbarCollapse);
})(jQuery); // End of use strict

function convertToRupiah(angka) {
    let rupiah = '';
    let angkarev = angka.toString().split('').reverse().join('');
    for (let i = 0; i < angkarev.length; i++) if (i % 3 == 0) rupiah += angkarev.substr(i, 3) + '.';
    return 'Rp. ' + rupiah.split('', rupiah.length - 1).reverse().join('');
}

function getToday() {
    let hari = [
        'Minggu',
        'Senin',
        'Selasa',
        'Rabu',
        'Kamis',
        'Jumat',
        'Sabtu',
    ];
    let bulan = [
        'Januari',
        'Februari',
        'Maret',
        'April',
        'Mei',
        'Juni',
        'July',
        'Agustus',
        'September',
        'Oktober',
        'November',
        'Desember',
    ];
    let tanggal = new Date().getDate();
    let _hari = new Date().getDay();
    let _bulan = new Date().getMonth();
    let _tahun = new Date().getFullYear();

    let hari1 = hari[_hari];
    let bulan1 = bulan[_bulan];
    let tahun = (_tahun < 1000) ? _tahun + 1900 : _tahun;

    let hasil = hari1 + ', ' + tanggal + ' ' + bulan1 + ' ' + tahun;

    return hasil;
}

// console.log(getToday())

$(document).ready(function () {
    $('#waktu').append(getToday())
    const logam_url = 'https://i.rajaemasindonesia.co.id/api/logam';
    $.ajax({
        url: logam_url,
        method: 'GET',
        cache: false,
        dataType: 'json',
        success: function (results) {
            const logams = results.data
            // console.log(logams);
            $.each(logams, function (i, data) {
                $('#logam-list').append(`
                <tr>
                <th class="border border-dark" scope="row">`+ data.logam_mulia + `</th>
                <td class="border border-dark">` + data.persentase + `</td>
                <td class="table-success border border-dark">`+ convertToRupiah(data.harga_logam) + `,-</td>
                <td class="alert-danger border border-dark">` + data.kadar_logam + `</td>
                </tr>
                `);
            });
        }
    });

    const gold_url = 'https://i.rajaemasindonesia.co.id/api/gold';
    $.ajax({
        url: gold_url,
        method: 'GET',
        cache: false,
        dataType: 'json',
        success: function (results) {
            const golds = results.data
            // console.log(logams);
            $.each(golds, function (i, data) {
                $('#gold-list').append(`
                <tr>
                <th class="border border-dark" scope="row">`+ data.kadar_karat + `</th>
                <td class="table-primary border border-dark">`+ convertToRupiah(data.harga) + `,-</td>
                </tr>
                `);
            });
        }
    });

    const perhiasan_url = 'https://i.rajaemasindonesia.co.id/api/perhiasan';
    $.ajax({
        url: perhiasan_url,
        method: 'GET',
        cache: false,
        dataType: 'json',
        success: function (results) {
            const perhiasans = results.data
            // console.log(logams);
            $.each(perhiasans, function (i, data) {
                $('#perak-list').append(`
                <tr>
                <td class="table-success">`+ convertToRupiah(data.perak_hq) + `,-</td>
                <td class="table-primary">`+ convertToRupiah(data.perak_lq) + `,-</td>
                </tr>
                `);
            });
            $.each(perhiasans, function (i, data) {
                $('#paladium-list').append(`
                <tr>
                <td class="table-success">`+ convertToRupiah(data.paladium_hq) + `,-</td>
                <td class="table-primary">`+ convertToRupiah(data.paladium_lq) + `,-</td>
                </tr>
                `);
            });
            $.each(perhiasans, function (i, data) {
                $('#rhodium-list').append(`
                <tr>
                <td class="table-success">`+ convertToRupiah(data.rhodium_hq) + `,-</td>
                <td class="table-primary">`+ convertToRupiah(data.rhodium_lq) + `,-</td>
                </tr>
                `);
            });
            $.each(perhiasans, function (i, data) {
                $('#platinum-list').append(`
                <tr>
                <td class="table-success">`+ convertToRupiah(data.platinum_hq) + `,-</td>
                <td class="table-primary">`+ convertToRupiah(data.platinum_lq) + `,-</td>
                </tr>
                `);
            });
            $.each(perhiasans, function (i, data) {
                $('#iridium-list').append(`
                <tr>
                <td class="table-success">`+ convertToRupiah(data.iridium_hq) + `,-</td>
                <td class="table-primary">`+ convertToRupiah(data.iridium_lq) + `,-</td>
                </tr>
                `);
            });
        }
    });
});
